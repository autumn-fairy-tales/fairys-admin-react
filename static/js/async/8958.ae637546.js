"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["8958"],{1090:function(e,n,a){a.r(n),a.d(n,{default:()=>c});var t=a(4246),r=a(980);function s(e){let n=Object.assign({h1:"h1",a:"a",div:"div",p:"p",h2:"h2",pre:"pre",code:"code"},(0,r.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"tabbarinstance-页面标签栏",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tabbarinstance-页面标签栏",children:"#"}),"tabBarInstance 页面标签栏"]}),"\n",(0,t.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,t.jsx)(n.div,{className:"rspress-directive-title",children:"提示"}),(0,t.jsx)(n.div,{className:"rspress-directive-content",children:(0,t.jsx)(n.p,{children:"用于存储当前应用的页面标签栏数据，包括标签栏项集合、右侧选择的标签栏项集合、页面是否全屏等。"})})]}),"\n",(0,t.jsxs)(n.h2,{id:"引入",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#引入",children:"#"}),"引入"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import { tabBarInstance } from '@fairys/admin-tools-react';\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"状态值",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#状态值",children:"#"}),"状态值"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import type { MenuItemType } from './menu-data';\nexport interface TabBarItemType extends MenuItemType {\n}\nexport interface TabBarInstanceState {\n    /**tab项集合*/\n    tabBarItems: TabBarItemType[];\n    /**右侧选择的tab项集合,不在可视区域的数据*/\n    dropDownTabBarItems: TabBarItemType[];\n    /**页面是否全屏*/\n    pageFullScreen?: boolean;\n    /**默认引用值*/\n    __defaultValue?: string;\n}\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"实体类",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#实体类",children:"#"}),"实体类"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"export class TabBarInstance {\n    state: TabBarInstanceState;\n    /**初始化渲染菜单数据*/\n    ctor: (tabBarItems: MenuItemType[]) => void;\n    /**添加tab项*/\n    addItem: (item: TabBarItemType) => void;\n    /**根据path添加tab项*/\n    add: (path: string) => void;\n    /**删除tab项*/\n    remove: (path: string, isActive: boolean) => void;\n    /**设置页面是否全屏*/\n    onToggleFullScreen: () => void;\n    /**关闭其他标签*/\n    removeOther: (current: number, isActive: boolean) => void;\n    /**移除左侧*/\n    removeLeft: (current: number, isActive: boolean) => void;\n    /**移除右侧*/\n    removeRight: (current: number, isActive: boolean) => void;\n    /**清空tab项*/\n    clear: () => void;\n}\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"hooks",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#hooks",children:"#"}),"hooks"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"export const useTabBar: () => [TabBarInstanceState, TabBarInstance, string | undefined];\n"})})]})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(s,e)})):s(e)}let c=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["zh%2Fcontext%2FtabBarInstance.md"]={toc:[{id:"引入",text:"引入",depth:2},{id:"状态值",text:"状态值",depth:2},{id:"实体类",text:"实体类",depth:2},{id:"hooks",text:"hooks",depth:2}],title:"tabBarInstance 页面标签栏",headingTitle:"tabBarInstance 页面标签栏",frontmatter:{}}}}]);