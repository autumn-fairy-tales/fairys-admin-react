"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["2832"],{4905:function(n,e,t){t.r(e),t.d(e,{default:()=>c});var i=t(4246),a=t(980);function o(n){let e=Object.assign({h1:"h1",a:"a",div:"div",p:"p",h2:"h2",pre:"pre",code:"code"},(0,a.ah)(),n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.h1,{id:"notificationdatainstance-通知数据",children:[(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#notificationdatainstance-通知数据",children:"#"}),"notificationDataInstance 通知数据"]}),"\n",(0,i.jsxs)(e.div,{className:"rspress-directive tip",children:[(0,i.jsx)(e.div,{className:"rspress-directive-title",children:"提示"}),(0,i.jsx)(e.div,{className:"rspress-directive-content",children:(0,i.jsx)(e.p,{children:"用于存储当前应用的通知数据，包括通知tab列表、通知列表数据、通知标题等。"})})]}),"\n",(0,i.jsxs)(e.h2,{id:"引入",children:[(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#引入",children:"#"}),"引入"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ts",children:"import { notificationDataInstance } from '@fairys/admin-tools-react';\n"})}),"\n",(0,i.jsxs)(e.h2,{id:"状态值",children:[(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#状态值",children:"#"}),"状态值"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ts",children:"import { IconProps } from '@iconify/react';\nexport type NotificationDataInstanceState = {\n    /**通知tab列表*/\n    tabItems?: NotificationTabItemType[];\n    activeKey?: string;\n    /**列表数据(在不分类的时候渲染)*/\n    dataList?: Pick<NotificationItemType, 'type'>[];\n    /**通知标题*/\n    title?: string;\n    /**是否显示图标\n     * @default true\n     */\n    isShowIcon?: boolean;\n    /**默认引用值*/\n    __defaultValue?: string;\n    /**显示数量*/\n    count?: number;\n    /**是否显示更多弹窗*/\n    visibleMoreModal?: boolean;\n};\n\nexport interface NotificationTabItemType {\n    /**tab标题*/\n    title: string;\n    /**tab键(分类类型)*/\n    key: string;\n    /**图标*/\n    icon?: string;\n    /**图标属性*/\n    iconProps?: IconProps;\n    [s: string]: any;\n}\nexport interface NotificationItemType {\n    /**通知id*/\n    id: string;\n    /**通知类型*/\n    type: string;\n    /**通知标题*/\n    title: string;\n    /**通知时间*/\n    date: string;\n    /**通知内容*/\n    content?: string;\n    /**图标*/\n    icon?: string;\n    /**图标属性*/\n    iconProps?: IconProps;\n    [s: string]: any;\n}\n"})}),"\n",(0,i.jsxs)(e.h2,{id:"实体类",children:[(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#实体类",children:"#"}),"实体类"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ts",children:'export class NotificationDataInstance {\n    state: NotificationDataInstanceState;\n    ctor: (options: {\n        tabItems?: NotificationTabItemType[];\n        title?: string;\n        isShowIcon?: boolean;\n    }) => void;\n    /**更新值 tabs 选项key（外部挂载事件）*/\n    onUpdateActiveKey?: (key: string) => void;\n    /**更新值*/\n    _onUpdateActiveKey: (key: string) => void;\n    /**根据类型获取数据*/\n    getDataType: (type: string) => any;\n    /**根据类型更新数据*/\n    updatedToType: (type: string, data: NotificationItemType[]) => void;\n    /**获取数据*/\n    getDataList: () => Pick<NotificationItemType, "type">[];\n    /**更新列表数据*/\n    updateDataList: (data: NotificationItemType[]) => void;\n    /**点击数据(外部挂载事件)*/\n    onClickItem?: (item: NotificationItemType) => void;\n    /**点击数据*/\n    _onClickItem: (item: NotificationItemType) => void;\n    /**点击查看全部(外部挂载事件)*/\n    onClickMore?: (activeKey: string) => void;\n    /**关闭更多弹窗*/\n    closeMoreModal: () => void;\n    /**点击查看全部*/\n    _onClickMore: () => void;\n    /**清空数据*/\n    clear: () => void;\n}\n'})}),"\n",(0,i.jsxs)(e.h2,{id:"hooks",children:[(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#hooks",children:"#"}),"hooks"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ts",children:'export const useNotificationDatainstance: () => [NotificationDataInstanceState, NotificationDataInstance, NotificationDataInstanceState["__defaultValue"]];\n'})}),"\n",(0,i.jsxs)(e.h2,{id:"示例",children:[(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#示例",children:"#"}),"示例"]}),"\n",(0,i.jsxs)(e.div,{className:"rspress-directive warning",children:[(0,i.jsx)(e.div,{className:"rspress-directive-title",children:"注意"}),(0,i.jsxs)(e.div,{className:"rspress-directive-content",children:[(0,i.jsxs)(e.p,{children:["如果使用",(0,i.jsx)(e.code,{children:"通知分类"}),"，请在渲染",(0,i.jsx)(e.code,{children:"Layout"}),"和",(0,i.jsx)(e.code,{children:"FairysRoot"}),"组件之前，调用",(0,i.jsx)(e.code,{children:"ctor"}),"方法，设置",(0,i.jsx)(e.code,{children:"tabItems"}),"属性值"]}),(0,i.jsxs)(e.p,{children:["如果不进行分类，不用调用",(0,i.jsx)(e.code,{children:"ctor"}),"方法，设置",(0,i.jsx)(e.code,{children:"tabItems"}),"属性值"]}),(0,i.jsxs)(e.p,{children:["其他方法在任何地方都可调用，建议在渲染",(0,i.jsx)(e.code,{children:"Layout"}),"和",(0,i.jsx)(e.code,{children:"FairysRoot"}),"组件之后使用"]})]})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ts",meta:"title='通知分类使用'",children:"import { notificationDataInstance } from '@fairys/admin-tools-react';\n\nnotificationDataInstance.ctor({\n  tabItems: [\n    {\n      title: '全部',\n      key: 'all',\n    },\n    {\n      title: '未读',\n      key: 'unread',\n    },\n    {\n      title: '已读',\n      key: 'read',\n    },\n  ],\n});\n\nnotificationDataInstance.updatedToType('unread', [\n  {\n    icon: 'ant-design:unordered-list',\n    id: '1',\n    title: '未读',\n    date: '2023-01-01',\n    type: 'info',\n  },\n]);\n\nnotificationDataInstance.updatedToType('read', [\n  {\n    icon: 'ant-design:unordered-list',\n    id: '1',\n    title: '已读',\n    date: '2023-01-01',\n    type: 'info',\n  },\n]);\n\nnotificationDataInstance.updatedToType('all', [\n  {\n    icon: 'ant-design:unordered-list',\n    id: '1',\n    title:\n      '通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1',\n    date: '2023-01-01',\n    type: 'info',\n  },\n  {\n    icon: 'ant-design:unordered-list',\n    id: '2',\n    title: '通知2',\n    date: '2023-01-02',\n    type: 'success',\n  },\n]);\n/**点击数据*/\nnotificationDataInstance.onClickItem = (item) => {\n  console.log(item);\n};\n/**点击查看全部*/\nnotificationDataInstance.onClickMore = (activeKey) => {\n  console.log(activeKey);\n};\n/**更新值 tabs 选项key（外部挂载事件）*/\nnotificationDataInstance.onUpdateActiveKey = (key) => {\n  console.log(key);\n};\n\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ts",meta:"title='通知无分类使用'",children:"import { notificationDataInstance } from '@fairys/admin-tools-react';\n\nnotificationDataInstance.updateDataList([\n  {\n    icon: 'ant-design:unordered-list',\n    id: '1',\n    title:\n      '通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1通知1',\n    date: '2023-01-01',\n    type: 'info',\n  },\n  {\n    icon: 'ant-design:unordered-list',\n    id: '2',\n    title: '通知2',\n    date: '2023-01-02',\n    type: 'success',\n  },\n]);\n\n/**点击数据*/\nnotificationDataInstance.onClickItem = (item) => {\n  console.log(item);\n};\n/**点击查看全部*/\nnotificationDataInstance.onClickMore = (activeKey) => {\n  console.log(activeKey);\n};\n/**更新值 tabs 选项key（外部挂载事件）*/\nnotificationDataInstance.onUpdateActiveKey = (key) => {\n  console.log(key);\n};\n\n"})})]})}function s(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,a.ah)(),n.components);return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(o,n)})):o(n)}let c=s;s.__RSPRESS_PAGE_META={},s.__RSPRESS_PAGE_META["zh%2Fcontext%2FnotificationDataInstance.md"]={toc:[{id:"引入",text:"引入",depth:2},{id:"状态值",text:"状态值",depth:2},{id:"实体类",text:"实体类",depth:2},{id:"hooks",text:"hooks",depth:2},{id:"示例",text:"示例",depth:2}],title:"notificationDataInstance 通知数据",headingTitle:"notificationDataInstance 通知数据",frontmatter:{}}}}]);