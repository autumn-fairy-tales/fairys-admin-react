"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["7389"],{5307:function(e,n,r){r.r(n),r.d(n,{default:()=>d});var a=r(4246),t=r(980),o=r(7378),s=r(5274);let i={username:e=>e?"":"用户名不能为空",password:e=>e?"":"密码不能为空"},l=()=>{let[e,n]=(0,o.useState)(!1);console.log("FairysLoginPage");let r=s.$r.useForm();return(0,a.jsxs)(o.Fragment,{children:[(0,a.jsxs)(s.$r,{mainClassName:"bg-white dark:bg-gray-900 px-[50px] py-[50px]",title:"登录",form:r,rules:i,children:[(0,a.jsx)(s.$r.FormItem,{name:"username",label:"用户名",required:!0,children:(0,a.jsx)(s.$r.FormItemInput,{placeholder:"请输入用户名"})}),(0,a.jsx)(s.$r.FormItem,{name:"password",label:"密码",required:!0,children:(0,a.jsx)(s.$r.FormItemInput,{placeholder:"请输入密码",type:"password"})}),(0,a.jsx)("button",{onClick:()=>{r.validate().then(e=>{n(!0),console.log(e)}).catch(e=>{console.log(e)})},className:"bg-(--fairys-theme-color)/90 rounded-sm text-white py-[9px] mt-[20px] hover:bg-(--fairys-theme-color) cursor-pointer transition-all duration-300",type:"button",children:"登录"})]}),(0,a.jsx)(s.PO,{loading:e,tips:"登录中"})]})};var c=r(357);function m(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",pre:"pre",code:"code",p:"p",strong:"strong"},(0,t.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.h1,{id:"登录",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#登录",children:"#"}),"登录"]}),"\n",(0,a.jsxs)(n.h2,{id:"引入",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#引入",children:"#"}),"引入"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"import { FairysLoginPage } from '@fairys/admin-tools-react';\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"组件示例",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#组件示例",children:"#"}),"组件示例"]}),"\n",(0,a.jsxs)(c.Z,{isMobile:"false",demoId:"_zh_ui_components_login_1",children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",meta:"preview",children:'import { Fragment, useState } from \'react\';\nimport { FairysEnterLoading } from \'@fairys/admin-tools-react\';\nimport { FairysLoginPage } from \'@fairys/admin-tools-react\';\n\nconst rules = {\n  username: (value: string) => {\n    if (!value) {\n      return \'用户名不能为空\';\n    }\n    return \'\';\n  },\n  password: (value: string) => {\n    if (!value) {\n      return \'密码不能为空\';\n    }\n    return \'\';\n  },\n};\n\nexport const Login = () => {\n  const [loading, setLoading] = useState(false);\n  console.log(\'FairysLoginPage\');\n  const formInstance = FairysLoginPage.useForm();\n  const onLoginClick = () => {\n    formInstance\n      .validate()\n      .then((values) => {\n        setLoading(true);\n        console.log(values);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <Fragment>\n      <FairysLoginPage\n        mainClassName="bg-white dark:bg-gray-900 px-[50px] py-[50px]"\n        title="登录"\n        form={formInstance}\n        rules={rules}\n      >\n        <FairysLoginPage.FormItem name="username" label="用户名" required>\n          <FairysLoginPage.FormItemInput placeholder="请输入用户名" />\n        </FairysLoginPage.FormItem>\n        <FairysLoginPage.FormItem name="password" label="密码" required>\n          <FairysLoginPage.FormItemInput placeholder="请输入密码" type="password" />\n        </FairysLoginPage.FormItem>\n        <button\n          onClick={onLoginClick}\n          className="bg-(--fairys-theme-color)/90 rounded-sm text-white py-[9px] mt-[20px] hover:bg-(--fairys-theme-color) cursor-pointer transition-all duration-300"\n          type="button"\n        >\n          登录\n        </button>\n      </FairysLoginPage>\n      <FairysEnterLoading loading={loading} tips="登录中" />\n    </Fragment>\n  );\n};\nexport default Login;\n'})}),(0,a.jsx)(l,{})]}),"\n",(0,a.jsxs)(n.h2,{id:"组件参数",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#组件参数",children:"#"}),"组件参数"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"表单实例"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:'export type FairysRuleItemType = (value: any, formData: any) => Promise<React.ReactNode> | React.ReactNode;\ninterface FairysLoginPageFormState {\n    /**所有表单项值*/\n    formData: Record<string, any>;\n    /**所有表单项错误信息*/\n    errors: Record<string, React.ReactNode>;\n}\ndeclare class FairysLoginPageFormItemInstance {\n    /**表单项名称*/\n    name: string;\n    /**表单项值*/\n    value: any;\n    /**表单项错误信息*/\n    errors: React.ReactNode;\n}\nexport interface UseFairysLoginPageFormItemInstanceProps {\n    /**表单项名称*/\n    name: string;\n    /**表单项值属性名*/\n    valuePropName?: string;\n    /**表单项值格式化函数*/\n    formatValue?: (value: any, form: FairysLoginPageFormInstance, event: any) => any;\n}\nexport declare const useFairysLoginPageFormItemInstance: (props: UseFairysLoginPageFormItemInstanceProps) => {\n    value: any;\n    errors: string | number | boolean | {\n        readonly type: string | ((props: any, deprecatedLegacyContext?: any) => import("react").ReactNode) | {};\n        readonly props: any;\n        readonly key: string | null;\n    } | {\n        readonly [Symbol.iterator]: () => Iterator<import("react").ReactNode, any, any>;\n    } | {\n        readonly children: string | number | boolean | {\n            readonly type: string | ((props: any, deprecatedLegacyContext?: any) => import("react").ReactNode) | {};\n            readonly props: any;\n            readonly key: string | null;\n        } | {\n            readonly [Symbol.iterator]: () => Iterator<import("react").ReactNode, any, any>;\n        } | /*elided*/ any;\n        readonly type: string | ((props: any, deprecatedLegacyContext?: any) => import("react").ReactNode) | {};\n        readonly props: any;\n        readonly key: string | null;\n    };\n    itemInstance: FairysLoginPageFormItemInstance;\n    formInstance: FairysLoginPageFormInstance;\n    onChange: (event: any) => void;\n};\nexport declare class FairysLoginPageFormInstance {\n    /**所有表单项值*/\n    state: FairysLoginPageFormState;\n    /**所有表单项*/\n    items: Map<string, FairysLoginPageFormItemInstance>;\n    /**验证规则*/\n    rules: Record<string, FairysRuleItemType>;\n    register: (name: string, item: FairysLoginPageFormItemInstance) => () => void;\n    /**更新表单值*/\n    updatedFormData: (value: Record<string, any>, isValidate?: boolean) => void;\n    /**更新错误信息*/\n    updatedErrors: (value: Record<string, React.ReactNode>) => void;\n    /**验证表单*/\n    validate: (keys?: string[], isReturn?: boolean) => Promise<{\n        value: {\n            readonly [x: string]: any;\n        };\n        errors: Record<string, import("react").ReactNode>;\n    }>;\n    /**值更新*/\n    onValueChange: (name: string, value: any) => void;\n}\nexport declare const useFairysLoginPageFormInstance: (form?: FairysLoginPageFormInstance) => FairysLoginPageFormInstance;\nexport declare const FairysLoginPageFormInstanceContext: import("react").Context<FairysLoginPageFormInstance>;\nexport declare const useFairysLoginPageFormInstanceContext: () => FairysLoginPageFormInstance;\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"表单项"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"import { UseFairysLoginPageFormItemInstanceProps } from './instance';\nexport interface FairysLoginPageFormItemInputProps extends React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> {\n    /**错误边框位置*/\n    errorBorderd?: 'bottom' | 'none' | 'all';\n    /**是否存在验证不通过信息*/\n    'data-is-error'?: boolean;\n}\nexport declare const FairysLoginPageFormItemInput: (props: FairysLoginPageFormItemInputProps) => import(\"react/jsx-runtime\").JSX.Element;\nexport interface FairysLoginPageFormItemProps extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, UseFairysLoginPageFormItemInstanceProps {\n    /**标签*/\n    label?: React.ReactNode;\n    /**是否必填*/\n    required?: boolean;\n    /**显示错误信息*/\n    isShowErrorMessage?: boolean;\n    /**布局*/\n    layout?: 'vertical' | 'horizontal';\n    /**标签类名*/\n    labelClassName?: string;\n}\nexport declare const FairysLoginPageFormItem: (props: FairysLoginPageFormItemProps) => import(\"react/jsx-runtime\").JSX.Element;\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"表单"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:'import { FairysLoginPageFormInstance } from \'./instance\';\ninterface FairysLoginPageProps extends Omit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, \'title\'> {\n  /**登录页标题*/\n    title?: React.ReactNode;\n    /**登录页表单实例*/\n    form?: FairysLoginPageFormInstance;\n    /**登录页表单验证规则*/\n    rules?: FairysLoginPageFormInstance[\'rules\'];\n    // 登录页表单主体类名\n    bodyClassName?: string;\n    // 登录页主体类名\n    mainClassName?: string;\n    // 登录页标题类名\n    titleClassName?: string;\n}\nexport declare const FairysLoginPage: {\n    (props: FairysLoginPageProps): import("react/jsx-runtime").JSX.Element;\n    useForm: (form?: FairysLoginPageFormInstance) => FairysLoginPageFormInstance;\n    useFormInstance: () => FairysLoginPageFormInstance;\n    FormItem: (props: import("./form.item").FairysLoginPageFormItemProps) => import("react/jsx-runtime").JSX.Element;\n    FormItemInput: (props: import("./form.item").FairysLoginPageFormItemInputProps) => import("react/jsx-runtime").JSX.Element;\n};\nexport {};\n\n'})})]})}function g(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,a.jsx)(n,Object.assign({},e,{children:(0,a.jsx)(m,e)})):m(e)}let d=g;g.__RSPRESS_PAGE_META={},g.__RSPRESS_PAGE_META["zh%2Fui%2Fcomponents%2Flogin.mdx"]={toc:[{id:"引入",text:"引入",depth:2},{id:"组件示例",text:"组件示例",depth:2},{id:"组件参数",text:"组件参数",depth:2}],title:"登录",headingTitle:"登录",frontmatter:{}}}}]);