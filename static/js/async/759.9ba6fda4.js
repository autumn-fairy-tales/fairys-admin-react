"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["759"],{3537:function(e,n,s){s.r(n),s.d(n,{default:()=>c});var r=s(4246),a=s(980);function i(e){let n=Object.assign({h1:"h1",a:"a",p:"p",code:"code",div:"div",h2:"h2",pre:"pre"},(0,a.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"缓存组件",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#缓存组件",children:"#"}),"缓存组件"]}),"\n",(0,r.jsxs)(n.p,{children:["缓存页面，在",(0,r.jsx)(n.code,{children:"react-activation"}),"包的",(0,r.jsx)(n.code,{children:"AliveScope"}),"的子组件中使用 KeepAliveBaseHOC 包裹组件，即可实现缓存功能。"]}),"\n",(0,r.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,r.jsx)(n.div,{className:"rspress-directive-title",children:"TIP"}),(0,r.jsx)(n.div,{className:"rspress-directive-content",children:(0,r.jsxs)(n.p,{children:["这个组件当前在插件",(0,r.jsx)(n.code,{children:"路由生成"}),"中使用。"]})})]}),"\n",(0,r.jsxs)(n.h2,{id:"引入",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#引入",children:"#"}),"引入"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { KeepAliveBaseHOC } from '@fairys/admin-tools-react';\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"组件示例",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#组件示例",children:"#"}),"组件示例"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { FairysFullScreen ,FairysButtonBase } from '@fairys/admin-tools-react';\nimport React,{ useState } from 'react';\nimport { FairysButtonBase } from '@fairys/admin-tools-react';\n\nconst Demo = () => {\n  const [open,setOpen] = useState(false)\n  return (<div style={{ position: \"relative\" , width: \"100%\", height: \"300px\" }}>\n    <FairysButtonBase onClick={() => setOpen(true)}>\n      打开全屏\n    </FairysButtonBase>\n    <FairysFullScreen open={open} onClose={() => setOpen(false)}>\n      内容\n    </FairysFullScreen>\n  </div>);\n};\n\nexport default KeepAliveBaseHOC(Demo,'keep-alive-demo');\n\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"组件参数",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#组件参数",children:"#"}),"组件参数"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface FairysFullScreenProps extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\n  /**是否全屏*/\n  open?: boolean;\n  /**全屏内容*/\n  children?: React.ReactNode;\n  /**关闭全屏回调*/\n  onClose?: () => void;\n}\n"})})]})}function t(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(i,e)})):i(e)}let c=t;t.__RSPRESS_PAGE_META={},t.__RSPRESS_PAGE_META["zh%2Fui%2Fcomponents%2Fkeep-alive.mdx"]={toc:[{id:"引入",text:"引入",depth:2},{id:"组件示例",text:"组件示例",depth:2},{id:"组件参数",text:"组件参数",depth:2}],title:"缓存组件",headingTitle:"缓存组件",frontmatter:{}}}}]);