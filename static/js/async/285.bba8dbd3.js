"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["285"],{1119:function(e,n,s){s.r(n),s.d(n,{default:()=>l});var r=s(4246),i=s(980);function a(e){let n=Object.assign({h1:"h1",a:"a",p:"p",div:"div",pre:"pre",code:"code",h2:"h2",ul:"ul",li:"li"},(0,i.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"路由生成",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#路由生成",children:"#"}),"路由生成"]}),"\n",(0,r.jsx)(n.p,{children:"通过目录结构生成路由配置"}),"\n",(0,r.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,r.jsx)(n.div,{className:"rspress-directive-title",children:"TIP"}),(0,r.jsxs)(n.div,{className:"rspress-directive-content",children:[(0,r.jsx)(n.p,{children:"在项目中引入路由数据，例如："}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import routes from '@fairys:routes';\n// 或\nimport routes from '@@/routes';\n// 或\nimport routes from '@/.fairys/routes';\n"})})]})]}),"\n",(0,r.jsxs)(n.h2,{id:"rsbuild配置",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#rsbuild配置",children:"#"}),"rsbuild配置"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { defineConfig } from '@rsbuild/core';\nimport { RsbuildReactRoutesPlugin } from '@fairys/admin-tools-react-plugins';\nexport default defineConfig({\n  // ...\n  plugins: [\n    // ...\n    RsbuildReactRoutesPlugin({}),\n  ],\n});\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"rspack配置",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#rspack配置",children:"#"}),"rspack配置"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { defineConfig } from '@rsbuild/core';\nimport { ReactRoutesPlugin } from '@fairys/admin-tools-react-plugins';\nexport default defineConfig({\n  tools: {\n    rspack: {\n      plugins: [\n        // ....\n        new ReactRoutesPlugin({}),\n      ],\n    },\n  },\n});\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"注意："}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["在使用ts项目时，需要在",(0,r.jsx)(n.code,{children:"tsconfig.json"}),"中添加如下配置："]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "compilerOptions": {\n    "paths": {\n      "@/*": ["./src/*"],\n      "@@/*": ["./src/.fairys/*"],\n      "@fairys:routes": ["./src/.fairys/routes"]\n    }\n  },\n}\n'})}),"\n",(0,r.jsxs)(n.h2,{id:"配置项",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#配置项",children:"#"}),"配置项"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'\nexport interface ReactRoutesPluginOptions {\n  /**\n   * @description 加载类型\n   * @default "layout_default_lazy"\n   *\n   * @choices ["lazy", "default", "layout_default_lazy"]\n   *\n   * "lazy": 异步加载\n   *\n   * "default": 同步加载\n   *\n   * "layout_default_lazy": 布局默认加载没有其他子路由时异步加载\n   */\n  loadType?: \'lazy\' | \'default\' | \'layout_default_lazy\';\n  /**\n   * @description 监听目录\n   * @default ["src/pages"]\n   */\n  watchDirs?: WatchDirsItem[];\n  /**\n   * @description 是否根据目录结构生成树路由\n   */\n  isTreeRoute?: boolean;\n\n  /**\n   * @description 保持路由组件的 HOC 函数\n   */\n  keepAliveBasePath?: string;\n}\n\nexport interface WatchDirsItem {\n  /**\n   * @description 监听目录\n   * @default "src/pages"\n   */\n  dir: string;\n  /**\n   * @description 路由前缀\n   * @default "/"\n   */\n  routePrefix?: string;\n}\n\n'})})]})}function t(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(a,e)})):a(e)}let l=t;t.__RSPRESS_PAGE_META={},t.__RSPRESS_PAGE_META["zh%2Fplugin%2Froute.md"]={toc:[{id:"rsbuild配置",text:"rsbuild配置",depth:2},{id:"rspack配置",text:"rspack配置",depth:2},{id:"配置项",text:"配置项",depth:2}],title:"路由生成",headingTitle:"路由生成",frontmatter:{}}}}]);