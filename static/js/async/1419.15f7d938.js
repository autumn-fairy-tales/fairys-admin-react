"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["1419"],{8490:function(e,n,t){t.r(n),t.d(n,{default:()=>d});var a=t(4246),s=t(980);function i(e){let n=Object.assign({h1:"h1",a:"a",div:"div",p:"p",code:"code",h2:"h2",pre:"pre"},(0,s.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.h1,{id:"menudatainstance-菜单数据",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#menudatainstance-菜单数据",children:"#"}),"menuDataInstance 菜单数据"]}),"\n",(0,a.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,a.jsx)(n.div,{className:"rspress-directive-title",children:"提示"}),(0,a.jsx)(n.div,{className:"rspress-directive-content",children:(0,a.jsx)(n.p,{children:"用于存储当前应用的菜单数据，包括侧边渲染菜单、主菜单、主菜单选中项、展开项、主菜单展开项等。"})})]}),"\n",(0,a.jsxs)(n.div,{className:"rspress-directive warning",children:[(0,a.jsx)(n.div,{className:"rspress-directive-title",children:"注意"}),(0,a.jsx)(n.div,{className:"rspress-directive-content",children:(0,a.jsxs)(n.p,{children:["请在渲染",(0,a.jsx)(n.code,{children:"Layout"}),"和",(0,a.jsx)(n.code,{children:"FairysRoot"}),"组件之前，调用",(0,a.jsx)(n.code,{children:"ctor"}),"方法设置菜单数据"]})})]}),"\n",(0,a.jsxs)(n.h2,{id:"引入",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#引入",children:"#"}),"引入"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"import { menuDataInstance } from '@fairys/admin-tools-react';\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"状态值",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#状态值",children:"#"}),"状态值"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"export interface MenuDataInstanceState {\n  /**侧边渲染菜单*/\n  menuItems: MenuItemType[];\n  /**主菜单*/\n  mainMenuItems: MenuItemType[];\n  /**主菜单选中项*/\n  mainMenuItemSelected?: string;\n  /**展开项*/\n  expandItems: MenuItemType[];\n  /**主菜单展开项*/\n  mainExpandItem?: MenuItemType;\n  /**搜索菜单*/\n  searchMenuItems?: MenuItemType[];\n  /**默认引用值*/\n  __defaultValue?: string;\n}\n\nexport interface MenuItemType {\n  /**标题*/\n  title: string;\n  /**路径*/\n  path: string;\n  /**图标*/\n  icon?: string;\n  /**图标属性*/\n  iconProps?: IconProps;\n  /**判断是否主子菜单字段，仅在第一层生效*/\n  isMain?: boolean;\n  /**在left布局中，父级是否显示\n   * @default true\n   */\n  left_isMainShow?: boolean;\n  /**子项菜单*/\n  items?: MenuItemType[];\n  /**是否为固定菜单,(直接固定到tabbar上，不可删除)*/\n  isTabFixed?: boolean;\n  /**排序-固定菜单*/\n  sortTabFixed?: number;\n  /**样式属性*/\n  className?: string;\n  /**是否打开浏览器新窗口*/\n  isOpenNewWindow?: boolean;\n  /**跳转之前触发，返回 false 则不跳转*/\n  onBeforeNavigate?: (item: MenuItemType) => boolean | Promise<boolean>;\n  [x: string]: any;\n}\n\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"实体类",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#实体类",children:"#"}),"实体类"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"export class MenuDataInstance {\n    /**原始整个菜单*/\n    _menuItems: MenuItemType[];\n    /**平铺所有菜单数据*/\n    _flatMenuItems: MenuItemType[];\n    /**地址查找父级路径*/\n    _parentMenuItemMap: Map<string, MenuItemType[]>;\n    /**菜单数据状态*/\n    state: MenuDataInstanceState;\n    /**设置菜单所有数据*/\n    ctor: (items: MenuItemType[]) => void;\n    /**更新主菜单展开项*/\n    updateMainExpandItem: (item?: MenuItemType) => void;\n    /**\n     * 通过path获取菜单对象\n     * 暂不支持 /path/:id 这种动态路由\n     */\n    get_path_menuItem: (path: string) => MenuItemType;\n    /**搜索菜单*/\n    onSearch: (word: string) => void;\n    /**判断是否是父级菜单*/\n    isParentMenuItem: (path: string, location_path: string) => boolean;\n    /**清空展开项*/\n    clearExpandItems: () => void;\n    /**展开项*/\n    onExpandItems: (path: string) => void;\n    /**折叠*/\n    onCollapseItems: (path: string) => void;\n    /**切换展示隐藏*/\n    onToggleItems: (path: string) => void;\n    /**是否展示*/\n    isExpand: (path: string) => boolean;\n    /**更新子菜单显示,和主菜单选中项*/\n    updateChildMenus: (path: string) => void;\n    /**点击主菜单切换*/\n    onMainMenu: (path: string) => void;\n    /**清空*/\n    clear: () => void;\n    /**跳转之前触发，返回 false 则不跳转*/\n    onBeforeNavigate?: (item: MenuItemType) => boolean | Promise<boolean>;\n}\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"hooks",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#hooks",children:"#"}),"hooks"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"export const useMenuData: () => [MenuDataInstanceState, MenuDataInstance, string | undefined];\n"})})]})}function r(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,a.jsx)(n,Object.assign({},e,{children:(0,a.jsx)(i,e)})):i(e)}let d=r;r.__RSPRESS_PAGE_META={},r.__RSPRESS_PAGE_META["zh%2Fcontext%2FmenuDataInstance.md"]={toc:[{id:"引入",text:"引入",depth:2},{id:"状态值",text:"状态值",depth:2},{id:"实体类",text:"实体类",depth:2},{id:"hooks",text:"hooks",depth:2}],title:"menuDataInstance 菜单数据",headingTitle:"menuDataInstance 菜单数据",frontmatter:{}}}}]);