"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["6926"],{8766:function(n,e,t){t.r(e),t.d(e,{default:()=>i});var a=t(4246),s=t(980);function o(n){let e=Object.assign({h1:"h1",a:"a",div:"div",p:"p",code:"code",h2:"h2",pre:"pre",strong:"strong"},(0,s.ah)(),n.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(e.h1,{id:"介绍",children:[(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#介绍",children:"#"}),"介绍"]}),"\n",(0,a.jsxs)(e.div,{className:"rspress-directive tip",children:[(0,a.jsx)(e.div,{className:"rspress-directive-title",children:"TIP"}),(0,a.jsxs)(e.div,{className:"rspress-directive-content",children:[(0,a.jsxs)(e.p,{children:["通过",(0,a.jsx)(e.code,{children:"Layout"}),"组件，实现项目整体页面布局。"]}),(0,a.jsx)(e.p,{children:"使开发者专注于业务逻辑的实现。"})]})]}),"\n",(0,a.jsxs)(e.h2,{id:"项目目录结构",children:[(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#项目目录结构",children:"#"}),"项目目录结构"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-dir",children:"\n.\n├── package.json\n├── public\n│   └── logo.png\n├── README.md\n├── rsbuild.config.ts\n├── src\n│   ├── assets\n│   │   └── logo.png\n│   ├── auth\n│   │   ├── index.tsx\n│   │   ├── login.tsx\n│   │   └── utils.ts\n│   ├── docs\n│   │   ├── 404.tsx\n│   │   ├── about\n│   │   │   └── page.tsx\n│   │   ├── detail\n│   │   │   └── page.tsx\n│   │   ├── layout.tsx\n│   │   └── page.tsx\n│   ├── env.d.ts\n│   ├── index.css\n│   ├── index.tsx\n│   ├── menu.ts\n│   ├── pages\n│   │   ├── *.tsx\n│   │   ├── 404.tsx\n│   │   ├── about\n│   │   │   └── page.tsx\n│   │   ├── detail\n│   │   │   └── page.tsx\n│   │   ├── home\n│   │   │   ├── aaa\n│   │   │   │   └── page.tsx\n│   │   │   ├── aaa copy\n│   │   │   │   └── page.tsx\n│   │   │   ├── dd\n│   │   │   │   └── page.tsx\n│   │   │   └── page.tsx\n│   │   ├── layout.tsx\n│   │   ├── lazy\n│   │   │   └── page.tsx\n│   │   ├── list\n│   │   │   └── page.tsx\n│   │   ├── page.tsx\n│   │   └── test\n│   │       └── page.tsx\n│   └── routes.tsx\n└── tsconfig.json\n\n"})}),"\n",(0,a.jsxs)(e.h2,{id:"rsbuildconfigts-配置",children:[(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#rsbuildconfigts-配置",children:"#"}),"rsbuild.config.ts 配置"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-ts",meta:'title="rsbuild.config.ts"',children:"\nimport { defineConfig } from '@rsbuild/core';\nimport { pluginReact } from '@rsbuild/plugin-react';\nimport tailwindcss from '@tailwindcss/postcss';\nimport { getLoadingHtmlTags, RsbuildReactRoutesPlugin } from '@fairys/admin-tools-react-plugins';\n\nexport default defineConfig({\n  output: {\n    assetPrefix: '/fairys-admin-react/',\n  },\n  server: {\n    base: '/fairys-admin-react/',\n  },\n  html: {\n    title: 'Fairys Admin React',\n    favicon: './public/logo.png',\n    tags: getLoadingHtmlTags('Fairys'),\n  },\n  plugins: [\n    pluginReact(),\n    RsbuildReactRoutesPlugin({\n      loadType: 'lazy',\n      // isTreeRoute: true,\n      watchDirs: [{ dir: 'src/docs', routePrefix: '/docs' }],\n      keepAliveBasePath: '@fairys/admin-tools-react/lib/components/keep-alive',\n    }),\n  ],\n  tools: {\n    postcss: (_, { addPlugins }) => {\n      addPlugins([tailwindcss()]);\n    },\n  },\n});\n\n"})}),"\n",(0,a.jsxs)(e.h2,{id:"整体项目代码",children:[(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#整体项目代码",children:"#"}),"整体项目代码"]}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"项目入口"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-tsx",meta:'title="src/index.tsx"',children:"\nimport ReactDOM from 'react-dom/client';\n\nimport {\n  settingDataInstance,\n  authDataInstance,\n  appPluginDataInstance,\n  notificationDataInstance,\n  FairysWatermarkBase,\n} from '@fairys/admin-tools-react';\n\nimport { AuthRoot } from './auth';\n\nsettingDataInstance.ctor({\n  projectName: 'Fairys Admin',\n  themeColor: '#af52de',\n});\n\nconst rootEl = document.getElementById('root');\nif (rootEl) {\n  const root = ReactDOM.createRoot(rootEl);\n  root.render(\n    <FairysWatermarkBase zIndex={99} className=\"h-full w-full\" content={['Fairys', 'Happy Working']}>\n      <AuthRoot />\n    </FairysWatermarkBase>,\n  );\n}\n\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"权限入口代码"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-tsx",meta:'title="src/auth/index.tsx"',children:"import { useEffect, useMemo } from 'react';\nimport {\n  menuDataInstance,\n  routerDataInstance,\n  accountDataInstance,\n  FairysRoot,\n  useAuthDataInstance,\n  authDataInstance,\n  loadingFadeOut,\n  FairysEnterLoading,\n} from '@fairys/admin-tools-react';\n\nimport { Login } from './login';\nimport { onGetAuth } from './utils';\nimport type { MenuItemType } from '@fairys/admin-tools-react';\nimport type { RouteObject } from 'react-router';\nimport { Layout } from '@fairys/admin-tools-react';\nimport Home from '@/pages/page';\n\n// 菜单数据\nexport const menuItems: MenuItemType[] = [\n  {\n    title: '主菜单',\n    path: 'main-menu',\n    isMain: true,\n    icon: 'ant-design:home-outlined',\n    items: [\n      {\n        title: '首页',\n        path: '/',\n        icon: 'ant-design:home-outlined',\n        isTabFixed: true,\n      },\n      {\n        title: '异步',\n        path: '/lazy',\n        icon: 'ant-design:home-outlined',\n      },\n      {\n        title: '详情',\n        path: '/detail',\n        icon: 'ant-design:info-circle-outlined',\n      },\n    ],\n  },\n];\n\n// 路由数据\nexport const routes: RouteObject[] = [\n  {\n    path: '/',\n    Component: Layout,\n    children: [\n      {\n        index: true,\n        path: '/',\n        Component: Home,\n      },\n      {\n        path: '/list',\n        // Component: List,\n        lazy: () => import('@/pages/list/page'),\n      },\n      {\n        path: '/detail',\n        // Component: Detail,\n        lazy: () => import('@/pages/detail/page'),\n      },\n      {\n        path: '/about',\n        // Component: About,\n        lazy: () => import('@/pages/about/page'),\n      },\n      {\n        path: '/lazy',\n        lazy: () => import('@/pages/lazy/page'),\n      },\n      {\n        path: '*',\n        element: <div>404</div>\n      }\n    ]\n  }\n];\n\nexport const AuthRoot = () => {\n  useMemo(() => {\n    const token = localStorage.getItem('token');\n    // if (!token) {\n    loadingFadeOut();\n    // }\n    authDataInstance.updatedStatus(token ? 'RequestAuth' : 'Login');\n  }, []);\n  const [authState] = useAuthDataInstance();\n  const status = authState.status;\n\n  const onAuth = () => {\n    authDataInstance.updatedStatus('RequestAuth');\n    onGetAuth().then(() => {\n      localStorage.setItem('token', '123');\n      menuDataInstance.ctor(menuItems);\n      accountDataInstance.updated({\n        userName: 'fairys',\n        userAvatar: 'https://gravatar.com/userimage/233185585/f004e2e1534508a34caef161ef76d9f2.jpeg?size=256',\n      });\n      // 可以对 routes 进行处理\n      routerDataInstance.createHashRouter(routes);\n      // 如果获取权限成功则设置状态为 auth\n      authDataInstance.updatedStatus('Auth');\n      /**移除页面加载动画*/\n      loadingFadeOut();\n    });\n  };\n  // 如果初始时Loading,则获取权限\n  useEffect(() => {\n    if (status === 'RequestAuth') {\n      onAuth();\n    }\n  }, []);\n  if (status === 'Login') {\n    return <Login onLogin={onAuth} />;\n  } else if (status === 'RequestAuth') {\n    return <FairysEnterLoading loading />;\n  }\n  if (status === 'NoAuth') {\n    return <div>NoAuth</div>;\n  }\n  return <FairysRoot isOutletKeepAlive={false} router={routerDataInstance.router} keepAlive={true} />;\n};\n\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"登录入口代码"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-tsx",meta:'title="src/auth/login.tsx"',children:'\nimport { Fragment, useState } from \'react\';\nimport { onLogin } from \'./utils\';\nimport { FairysEnterLoading } from \'@fairys/admin-tools-react\';\nimport { FairysLoginPage } from \'@fairys/admin-tools-react\';\n\ninterface LoginProps {\n  onLogin: () => void;\n}\n\nconst rules = {\n  username: (value: string) => {\n    if (!value) {\n      return \'用户名不能为空\';\n    }\n    return \'\';\n  },\n  password: (value: string) => {\n    if (!value) {\n      return \'密码不能为空\';\n    }\n    return \'\';\n  },\n};\n\nexport const Login = (props: LoginProps) => {\n  const [loading, setLoading] = useState(false);\n  const formInstance = FairysLoginPage.useForm();\n  const onLoginClick = () => {\n    formInstance\n      .validate()\n      .then((values) => {\n        setLoading(true);\n        onLogin()\n          .then(() => {\n            console.log(\'登录成功\');\n            props.onLogin();\n          })\n          .finally(() => {\n            setLoading(false);\n          });\n        console.log(values);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <Fragment>\n      <FairysLoginPage\n        mainClassName="bg-white dark:bg-gray-900 px-[50px] py-[50px]"\n        title="登录"\n        form={formInstance}\n        rules={rules}\n      >\n        <FairysLoginPage.FormItem name="username" label="用户名" required>\n          <FairysLoginPage.FormItemInput placeholder="请输入用户名" />\n        </FairysLoginPage.FormItem>\n        <FairysLoginPage.FormItem name="password" label="密码" required>\n          <FairysLoginPage.FormItemInput placeholder="请输入密码" type="password" />\n        </FairysLoginPage.FormItem>\n        <button\n          onClick={onLoginClick}\n          className="bg-(--fairys-theme-color)/90 rounded-sm text-white py-[9px] mt-[20px] hover:bg-(--fairys-theme-color) cursor-pointer transition-all duration-300"\n          type="button"\n        >\n          登录\n        </button>\n      </FairysLoginPage>\n      <FairysEnterLoading loading={loading} tips="登录中" />\n    </Fragment>\n  );\n};\n\n'})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"接口请求代码"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-tsx",meta:'title="src/auth/utils.tsx"',children:"\nconst requestAuth = (): Promise<boolean> => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(true);\n    }, 3000);\n  });\n};\n\nexport const onLogin = () => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(true);\n    }, 5000);\n  });\n};\n\nexport const onGetAuth = () => {\n  return requestAuth();\n};\n\n"})})]})}function r(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,s.ah)(),n.components);return e?(0,a.jsx)(e,Object.assign({},n,{children:(0,a.jsx)(o,n)})):o(n)}let i=r;r.__RSPRESS_PAGE_META={},r.__RSPRESS_PAGE_META["zh%2Fguide%2Findex.mdx"]={toc:[{id:"项目目录结构",text:"项目目录结构",depth:2},{id:"rsbuildconfigts-配置",text:"rsbuild.config.ts 配置",depth:2},{id:"整体项目代码",text:"整体项目代码",depth:2}],title:"介绍",headingTitle:"介绍",frontmatter:{}}}}]);